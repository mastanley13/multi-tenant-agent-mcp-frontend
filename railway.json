{
  "$schema": "https://railway.app/railway.schema.json",
  "services": {
    "backend": {
      "source": {
        "type": "image",
        "image": "node:20-alpine"
      },
      "build": {
        "builder": "DOCKERFILE",
        "buildCommand": "npm ci && npx prisma generate --schema=./client/prisma/schema.prisma"
      },
      "deploy": {
        "startCommand": "npx tsx backend/src/index.ts",
        "healthcheckPath": "/health",
        "healthcheckTimeout": 10,
        "restartPolicyType": "ON_FAILURE",
        "restartPolicyMaxRetries": 10
      },
      "variables": {
        "NODE_ENV": "production",
        "BACKEND_PORT": "3001",
        "CLIENT_URL": "https://${{RAILWAY_PUBLIC_DOMAIN}}"
      }
    },
    "frontend": {
      "source": {
        "type": "repo",
        "repo": ".",
        "subDirectory": "client"
      },
      "build": {
        "builder": "DOCKERFILE"
      },
      "deploy": {
        "startCommand": "npm start",
        "healthcheckPath": "/",
        "healthcheckTimeout": 30,
        "restartPolicyType": "ON_FAILURE",
        "restartPolicyMaxRetries": 5
      },
      "variables": {
        "NODE_ENV": "production",
        "PORT": "3000",
        "NEXT_PUBLIC_MCP_URL": "https://${{backend.RAILWAY_PUBLIC_DOMAIN}}",
        "NEXT_PUBLIC_SERVER_URL": "https://${{backend.RAILWAY_PUBLIC_DOMAIN}}",
        "NEXTAUTH_URL": "https://${{RAILWAY_PUBLIC_DOMAIN}}"
      }
    },
    "mcp-server": {
      "source": {
        "type": "repo", 
        "repo": ".",
        "subDirectory": "backend/mcp-src"
      },
      "build": {
        "builder": "NIXPACKS",
        "buildCommand": "npm ci && npm run build"
      },
      "deploy": {
        "startCommand": "npm run start:http",
        "healthcheckPath": "/health",
        "healthcheckTimeout": 15,
        "restartPolicyType": "ON_FAILURE",
        "restartPolicyMaxRetries": 10
      },
      "variables": {
        "NODE_ENV": "production",
        "PORT": "8000",
        "GHL_BASE_URL": "https://services.leadconnectorhq.com"
      }
    }
  },
  "environments": {
    "production": {
      "variables": {
        "NODE_ENV": "production"
      }
    }
  }
} 